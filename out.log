TIBCO Flogo® Runtime - 2.9.0 (Powered by Project Flogo™ - v1.0.0),
TIBCO Flogo® connector for General -  1.1.2.394,
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%,
     Starting TIBCO Flogo® Runtime,
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%,
2021-08-15T19:48:58.926Z INFO [flogo] - Properties will be resolved with the 'env' resolver,
2021-08-15T19:48:58.995Z WARN [flogo] - unable to load subflow metadata: unable to resolve subflow: res://flow:UserDefined,
2021-08-15T19:48:59.002Z WARN [flogo] - unable to create child logger named: ReceiveHTTPMessage - unable to create child logger,
2021-08-15T19:48:59.004Z INFO [general-trigger-rest] - Name: ReceiveHTTPMessage, Port: 10083,
2021-08-15T19:48:59.004Z INFO [general-trigger-rest] - ReceiveHTTPMessage: Registered handler [Method: POST, Path: /f1/builder/build/{id}/{name}],
2021-08-15T19:48:59.004Z INFO [general-trigger-rest] - ReceiveHTTPMessage: Registered handler [Method: GET, Path: /f1/builder/listRunner],
2021-08-15T19:48:59.004Z INFO [general-trigger-rest] - ReceiveHTTPMessage: Registered handler [Method: GET, Path: /f1/builder/getRunner/{ID}],
2021-08-15T19:48:59.004Z INFO [general-trigger-rest] - ReceiveHTTPMessage: Registered handler [Method: POST, Path: /f1/builder/buildDocker/{id}],
2021-08-15T19:48:59.005Z INFO [general-trigger-rest] - ReceiveHTTPMessage: Registered handler [Method: POST, Path: /f1/builder/buildLambda/{id}],
2021-08-15T19:48:59.005Z INFO [general-trigger-rest] - ReceiveHTTPMessage: Registered handler [Method: PUT, Path: /f1/builder/upload/{type}/{id}],
2021-08-15T19:48:59.009Z INFO [flogo.engine] - Starting app [ Builder ] with version [ 1.0.0 ],
2021-08-15T19:48:59.009Z INFO [flogo.engine] - Engine Starting...,
2021-08-15T19:48:59.009Z INFO [flogo.engine] - Starting Services...,
2021-08-15T19:48:59.010Z INFO [flogo] - ActionRunner Service: Started,
2021-08-15T19:48:59.010Z INFO [flogo.engine] - Started Services,
2021-08-15T19:48:59.010Z INFO [flogo.engine] - Starting Application...,
2021-08-15T19:48:59.010Z INFO [flogo] - Starting Triggers...,
2021-08-15T19:48:59.010Z INFO [flogo.trigger.execlistener] - Start,
2021-08-15T19:48:59.010Z INFO [flogo.trigger.execlistener] - Processing handlers,
2021-08-15T19:48:59.010Z INFO [flogo.trigger.execlistener] - Server = {0xc000387dc0},
2021-08-15T19:48:59.010Z INFO [flogo] - Trigger [ ExecEventListener ]: Started,
2021-08-15T19:48:59.011Z INFO [general-trigger-rest] - Starting ReceiveHTTPMessage...,
2021-08-15T19:48:59.012Z INFO [general-trigger-rest] - Started ReceiveHTTPMessage,
2021-08-15T19:48:59.012Z INFO [flogo] - Trigger [ ReceiveHTTPMessage ]: Started,
2021-08-15T19:48:59.012Z INFO [flogo.trigger.timer] - Scheduling a repeating timer,
2021-08-15T19:48:59.012Z INFO [flogo] - Trigger [ Timer ]: Started,
2021-08-15T19:48:59.012Z INFO [flogo.trigger.httpfilehandler] - Name: HTTPFileHandler, Port: 10084,
2021-08-15T19:48:59.012Z INFO [flogo.trigger.httpfilehandler] - Start HTTPFileHandler : subhandlers =  [Trigger[HTTPFileHandler].Push_And_Build_Project],
Start broker, EXEEventBroker :  &{0xc000387dc0},
&{0xc000365470 0xc000286e60 0xc000286e60},
map[],
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] entering ........ ,
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getURLMapper] Processing handlers : urlsMapping = <nil>,
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getURLMapper] mapper = map[],
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getVariableMapper] variablesDef = [map[Name:ServiceLocatorIP Type:String] map[Name:ServiceType Type:String]],
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] url : http://servicelocator:10080/f1/locator/register/builder,
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Query method : POST,
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getheader] headersDef = <nil>,
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getheader] header = map[],
2021-08-15T19:48:59.015Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] request url = http://servicelocator:10080/f1/locator/register/builder,
2021-08-15T19:48:59.019Z INFO [flogo] - Trigger [ HTTPFileHandler ]: Started,
2021-08-15T19:48:59.020Z INFO [flogo] - Triggers Started,
2021-08-15T19:48:59.022Z INFO [flogo.engine] - Application Started,
2021-08-15T19:48:59.022Z INFO [flogo.engine] - Engine Started,
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%,
     Runtime started in 140.40499ms,
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%,
2021-08-15T19:48:59.023Z INFO [flogo.trigger.httpfilehandler] - HTTPFileHandler starting at : path = /f1/builder/pushAndBuild/{compressedProject}, port = 10084,
2021-08-15T19:48:59.024Z INFO [flogo] - Management Service started successfully on Port[7777],
2021-08-15T19:48:59.040Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Status:200 OK,
2021-08-15T19:48:59.040Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Headers:map[Access-Control-Allow-Origin:[*] Content-Length:[127] Content-Type:[application/json; charset=UTF-8] Date:[Sun, 15 Aug 2021 19:48:59 GMT] X-Server-Instance-Id:[7252f1f4dc40dd77f3b475da1216cffb]],
2021-08-15T19:48:59.040Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response body = {"Response":{"ID":"builder_servicelocator","Properties":null,"Type":"builder","URL":"http://servicelocator:10083/f1/builder"}},
,
2021-08-15T19:48:59.040Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Exit ........ ,
2021-08-15T19:48:59.040Z INFO [flogo.flow] - Instance [b98f1e37e689e29967f70b8c3e8e53be] Done,
2021-08-15T19:49:58.972Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] entering ........ ,
2021-08-15T19:49:58.973Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getURLMapper] mapper = map[],
2021-08-15T19:49:58.973Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] url : http://servicelocator:10080/f1/locator/register/builder,
2021-08-15T19:49:58.973Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Query method : POST,
2021-08-15T19:49:58.973Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] request url = http://servicelocator:10080/f1/locator/register/builder,
map[],
2021-08-15T19:49:58.977Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Status:200 OK,
2021-08-15T19:49:58.977Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Headers:map[Access-Control-Allow-Origin:[*] Content-Length:[127] Content-Type:[application/json; charset=UTF-8] Date:[Sun, 15 Aug 2021 19:49:58 GMT] X-Server-Instance-Id:[7252f1f4dc40dd77f3b475da1216cffb]],
2021-08-15T19:49:58.977Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response body = {"Response":{"ID":"builder_servicelocator","Properties":null,"Type":"builder","URL":"http://servicelocator:10083/f1/builder"}},
,
2021-08-15T19:49:58.977Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Exit ........ ,
2021-08-15T19:49:58.977Z INFO [flogo.flow] - Instance [ba8f1e37e689e29967f70b8c3e8e53be] Done,
2021-08-15T19:50:48.393Z INFO [general-trigger-rest] - REST Trigger: Received request for id 'ReceiveHTTPMessage',
2021-08-15T19:50:48.428Z INFO [Docker Container/LogBuildDockerContainer] - %%%%%% Build Docker Container %%%%%% ID : Air-account_00004, DeployDescriptor : {"Descriptor":"docker-compose.yml","Name":"wafermaps_pipeline","Properties":[{"Group":"main","Value":[{"Name":"version","Type":"","Value":"3.6"},{"Name":"services.wafermaps_pipeline.container_name","Type":"","Value":"Air-account_00004_wafermaps_pipeline"},{"Name":"services.wafermaps_pipeline.build","Type":"","Value":"001"},{"Name":"networks.default.name","Type":"","Value":"http_rest_mqtt"},{"Name":"services.wafermaps_pipeline.environment[0]","Type":null,"Value":"FLOGO_APP_PROPS_ENV=auto"},{"Name":"services.wafermaps_pipeline.environment[1]","Type":null,"Value":"DataSource_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[2]","Type":null,"Value":"DataSource_MQTTTrigger_Topic=EdgexGatewayData"},{"Name":"services.wafermaps_pipeline.environment[3]","Type":null,"Value":"DataSource_MQTTTrigger_MaximumQOS=2"},{"Name":"services.wafermaps_pipeline.environment[4]","Type":null,"Value":"Mqtt_DataSource_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883"},{"Name":"services.wafermaps_pipeline.environment[5]","Type":null,"Value":"Mqtt_DataSource_IoTMQTT_Username=mqtt_admin"},{"Name":"services.wafermaps_pipeline.environment[6]","Type":null,"Value":"Mqtt_DataSource_IoTMQTT_Password=SECRET:SzHvHYjKw3yPY0qYP766RSyvczQlGbTRXB0="},{"Name":"services.wafermaps_pipeline.environment[7]","Type":null,"Value":"Inference_0_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[8]","Type":null,"Value":"Inference_0_REST_Timeout=600000"},{"Name":"services.wafermaps_pipeline.environment[9]","Type":null,"Value":"Inference_0_REST_InferenceData={\"Data\":\"@f1..value@\"}"},{"Name":"services.wafermaps_pipeline.environment[10]","Type":null,"Value":"Inference_0_REST_Conditions=[{\"device\":\"WaferSensing\",\"name\":\"wafer_snapshot\"}]"},{"Name":"services.wafermaps_pipeline.environment[11]","Type":null,"Value":"Inference_0_REST_URLMapping=[{\"Alias\":\"0\",\"URL\":\"http://192.168.1.152:10100/f1/data\"}]"},{"Name":"services.wafermaps_pipeline.environment[12]","Type":null,"Value":"Pipe_1_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[13]","Type":null,"Value":"Mqtt_Pipe_1_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883"},{"Name":"services.wafermaps_pipeline.environment[14]","Type":null,"Value":"Mqtt_Pipe_1_IoTMQTT_Username=mqtt_admin"},{"Name":"services.wafermaps_pipeline.environment[15]","Type":null,"Value":"Mqtt_Pipe_1_IoTMQTT_Password=SECRET:79V5PfQgmw5mTglH3kNiNcoeLPJGsx1w7Tw="},{"Name":"services.wafermaps_pipeline.environment[16]","Type":null,"Value":"Pipe_1_MQTTPub_Topic=AIRModelScoredData01"},{"Name":"services.wafermaps_pipeline.environment[17]","Type":null,"Value":"Pipe_1_MQTTPub_EncodeReadingValue=true"},{"Name":"services.wafermaps_pipeline.environment[18]","Type":null,"Value":"Pipe_1_MQTTPub_TargetField=Inference.REST..Inferred"},{"Name":"services.wafermaps_pipeline.environment[19]","Type":null,"Value":"Pipe_2_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[20]","Type":null,"Value":"Mqtt_Pipe_2_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883"},{"Name":"services.wafermaps_pipeline.environment[21]","Type":null,"Value":"Mqtt_Pipe_2_IoTMQTT_Username=mqtt_admin"},{"Name":"services.wafermaps_pipeline.environment[22]","Type":null,"Value":"Mqtt_Pipe_2_IoTMQTT_Password=SECRET:79V5PfQgmw5mTglH3kNiNcoeLPJGsx1w7Tw="},{"Name":"services.wafermaps_pipeline.environment[23]","Type":null,"Value":"Pipe_2_MQTTPub_Topic=AIRData"},{"Name":"services.wafermaps_pipeline.environment[24]","Type":null,"Value":"Logging_LogLevel=INFO"}]}],"ScriptSystemEnv":{"DetachedModex":"y","Platformx":"linux/amd64","RSVPUrl":"http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline"},"Type":"docker"}, SyncBuild : false, ComponentType : Service, Runner : , Image : , AppDescriptor : {"appModel":"1.1.1","connections":{},"contrib":"W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL0dyYXBoQnVpbGRlcl9Ub29scyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9HcmFwaEJ1aWxkZXJfVG9vbHMifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktY29udHJpYi5naXQvY29udHJpYnV0aW9ucy9HZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktbXF0dC5naXQvTXF0dCIsInMzbG9jYXRpb24iOiJUaWJjby9NcXR0In0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvTW9kZWxPcHMiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vTW9kZWxPcHMifSx7InJlZiI6ImdpdGh1Yi5jb20vVElCQ09Tb2Z0d2FyZS9GMV9GdW5jdGlvbi9mdW5jdGlvbnMvZjEiLCJzM2xvY2F0aW9uIjoiZmxvZ28vZjEvZnVuY3Rpb25zL2YxIn1d","description":"","feVersion":"2.9.0","imports":["github.com/project-flogo/flow","github.com/TIBCOSoftware/ModelOps/activity/httpclient","github.com/TIBCOSoftware/F1_Function/functions/f1","git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean","git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log","git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish","github.com/project-flogo/contrib/activity/actreturn","github.com/TIBCOSoftware/ModelOps/activity/dataembedder","github.com/TIBCOSoftware/GraphBuilder_Tools/activity/mapping","github.com/project-flogo/contrib/function/string","git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/trigger/subscribe","github.com/TIBCOSoftware/ModelOps/activity/dataselector","github.com/project-flogo/contrib/function/array","github.com/project-flogo/flow/activity/subflow"],"name":"AirPipeline","properties":[{"name":"Mqtt.DataSource_IoTMQTT.Broker_URL","type":"string","value":"tcp://a0056dbbadb2f11e99e4c067e42b309c-335014729.us-west-2.elb.amazonaws.com:1883"},{"name":"Mqtt.DataSource_IoTMQTT.Username","type":"string","value":"mqtt_admin"},{"name":"Mqtt.DataSource_IoTMQTT.Password","type":"string","value":"SECRET:vC62HV2QqY3SxQ3z5pILeVOKtNCXhe+lOY4="},{"name":"DataSource_MQTTTrigger.Topic","type":"string","value":"EdgexGatewayData"},{"name":"DataSource_MQTTTrigger.MaximumQOS","type":"float64","value":2},{"name":"DataSource_Logging.LogLevel","type":"string","value":"DEBUG"},{"name":"DataSource_App.ComponentName","type":"string","value":"DataSource"},{"name":"Inference_0_Logging.LogLevel","type":"string","value":"DEBUG"},{"name":"Inference_0_REST.Conditions","type":"string","value":"[]"},{"name":"Inference_0_REST.URLMapping","type":"string","value":"[]"},{"name":"Inference_0_REST.Producer","type":"string","value":"Inference.REST"},{"name":"Inference_0_REST.Consumer","type":"string","value":"*"},{"name":"Inference_0_REST.InferenceData","type":"string","value":"{}"},{"name":"Inference_0_REST.Timeout","type":"float64","value":"5000"},{"name":"Inference_0_App.ComponentName","type":"string","value":"Inference_0"},{"name":"Inference_0_App.IsListener","type":"boolean","value":false},{"name":"Pipe_1_Logging.LogLevel","type":"string","value":"INFO"},{"name":"Pipe_1_MQTTPub.Topic","type":"string","value":"AIRModelScoredData"},{"name":"Pipe_1_MQTTPub.Qos","type":"float64","value":2},{"name":"Pipe_1_MQTTPub.Retain","type":"boolean","value":false},{"name":"Mqtt.Pipe_1_IoTMQTT.Broker_URL","type":"string","value":"tcp://a0056dbbadb2f11e99e4c067e42b309c-335014729.us-west-2.elb.amazonaws.com:1883"},{"name":"Mqtt.Pipe_1_IoTMQTT.Username","type":"string","value":"mqtt_admin"},{"name":"Mqtt.Pipe_1_IoTMQTT.Password","type":"string","value":"SECRET:w73f6dRNWmzKm4xSRB0yRg=="},{"name":"Pipe_1_App.ComponentName","type":"string","value":"Pipe_1"},{"name":"App.NotificationListeners","type":"string","value":"[]"},{"name":"Pipe_1_MQTTPub.NotificationData","type":"string","value":"{\"uuid\": \"@f1..id@\",\"created\": \"@f1..origin@\",\"gateway\": \"@f1..gateway@\",\"device\": \"@f1..device@\",\"resource\": \"@f1..name@\",\"value\": \"@f1..value@\",\"source\": \"@rule..source@\",\"description\": \"@rule..description@\",\"level\": \"@rule..level@\"}"},{"name":"Pipe_1_MQTTPub.PublishData","type":"string","value":"{ \"id\": \"@f1..id@\", \"source\": \"@f1..source@\", \"device\": \"@f1..device@\", \"gateway\": \"@f1..gateway@\", \"readings\": [{\"id\": \"@f1..id@\", \"origin\": \"@f1..origin@\", \"device\": \"@f1..device@\", \"name\": \"@f1..name@\", \"value\": \"@f1..value@\", \"valueType\": \"@f1..valueType@\", \"mediaType\": \"@f1..mediaType@\"}]}"},{"name":"Pipe_1_MQTTPub.TargetField","type":"string","value":"f1..value"},{"name":"Pipe_1_MQTTPub.EscapeDoubleQuote","type":"boolean","value":true},{"name":"Pipe_1_MQTTPub.EncodeReadingValue","type":"boolean","value":false},{"name":"Pipe_1_App.IsListener","type":"boolean","value":false},{"name":"Pipe_2_Logging.LogLevel","type":"string","value":"INFO"},{"name":"Pipe_2_MQTTPub.Topic","type":"string","value":"AIRModelScoredData"},{"name":"Pipe_2_MQTTPub.Qos","type":"float64","value":2},{"name":"Pipe_2_MQTTPub.Retain","type":"boolean","value":false},{"name":"Mqtt.Pipe_2_IoTMQTT.Broker_URL","type":"string","value":"tcp://a0056dbbadb2f11e99e4c067e42b309c-335014729.us-west-2.elb.amazonaws.com:1883"},{"name":"Mqtt.Pipe_2_IoTMQTT.Username","type":"string","value":"mqtt_admin"},{"name":"Mqtt.Pipe_2_IoTMQTT.Password","type":"string","value":"SECRET:w73f6dRNWmzKm4xSRB0yRg=="},{"name":"Pipe_2_App.ComponentName","type":"string","value":"Pipe_2"},{"name":"App.NotificationListeners","type":"string","value":"[]"},{"name":"Pipe_2_MQTTPub.NotificationData","type":"string","value":"{\"uuid\": \"@f1..id@\",\"created\": \"@f1..origin@\",\"gateway\": \"@f1..gateway@\",\"device\": \"@f1..device@\",\"resource\": \"@f1..name@\",\"value\": \"@f1..value@\",\"source\": \"@rule..source@\",\"description\": \"@rule..description@\",\"level\": \"@rule..level@\"}"},{"name":"Pipe_2_MQTTPub.PublishData","type":"string","value":"{ \"id\": \"@f1..id@\", \"source\": \"@f1..source@\", \"device\": \"@f1..device@\", \"gateway\": \"@f1..gateway@\", \"readings\": [{\"id\": \"@f1..id@\", \"origin\": \"@f1..origin@\", \"device\": \"@f1..device@\", \"name\": \"@f1..name@\", \"value\": \"@f1..value@\", \"valueType\": \"@f1..valueType@\", \"mediaType\": \"@f1..mediaType@\"}]}"},{"name":"Pipe_2_MQTTPub.TargetField","type":"string","value":"f1..value"},{"name":"Pipe_2_MQTTPub.EscapeDoubleQuote","type":"boolean","value":true},{"name":"Pipe_2_MQTTPub.EncodeReadingValue","type":"boolean","value":false},{"name":"Pipe_2_App.IsListener","type":"boolean","value":false},{"name":"Logging.LogLevel","type":"string","value":"INFO"},{"name":"Filter_3_App.ComponentName","type":"string","value":"Filter_3"},{"name":"Filter_3_App.IsListener","type":"boolean","value":false},{"name":"Logging.LogLevel","type":"string","value":"INFO"},{"name":"Filter_4_App.ComponentName","type":"string","value":"Filter_4"},{"name":"Filter_4_App.IsListener","type":"boolean","value":false}],"resources":[{"data":{"description":"","links":[{"from":"Log","id":1,"to":"Next_Flow","type":"default"},{"from":"Next_Flow","id":2,"to":"Return","type":"default"}],"metadata":{"input":[{"name":"topic","type":"string"},{"name":"retained","type":"boolean"},{"name":"qos","type":"integer"},{"name":"duplicate","type":"boolean"},{"name":"messageID","type":"integer"},{"name":"data","schema":{"type":"json","value":"{\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}}}"},"type":"object"}],"output":[]},"name":"DataSource","tasks":[{"activity":{"input":{"Log Level":"=$property[\"DataSource_Logging.LogLevel\"]","flowInfo":false,"message":"=string.concat(\"########## DataSource ##########\", string.tostring($flow.data))"},"ref":"#log"},"description":"Simple Log Message Activity","id":"Log","name":"Log"},{"activity":{"input":{"enriched":"=coerce.toArray(f1.json2object(\"[]\"))","gateway":"=$flow.data.gateway","reading":"=$iteration[value]"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Inference_0"}},"description":"Simple SubFlow Activity","id":"Next_Flow","name":"Next_Flow","settings":{"accumulate":false,"iterate":"=$flow.data.readings"},"type":"iterator"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return","name":"Return"}]},"id":"flow:DataSource"},{"data":{"description":"","links":[{"from":"Log","id":1,"to":"HTTPClient","type":"default"},{"from":"HTTPClient","id":2,"to":"DataEmbedder","type":"default"},{"from":"DataEmbedder","id":3,"to":"Next_Flow","type":"default"},{"from":"Next_Flow","id":4,"to":"Return","type":"default"}],"metadata":{"fe_metadata":{"input":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"},"input":[{"name":"gateway","type":"string"},{"name":"reading","schema":{"type":"json","value":"{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"},"type":"object"},{"name":"enriched","schema":{"type":"json","value":"{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"},"type":"array"}],"output":[]},"name":"Inference_0","tasks":[{"activity":{"input":{"Log Level":"=$property[\"Inference_0_Logging.LogLevel\"]","flowInfo":false,"message":"=string.concat(\"########## Inference_0(REST) ########## : gateway = \", $flow.gateway, \", reading = { ... }, enriched = \", string.tostring($flow.enriched))"},"ref":"#log"},"description":"Simple Log Message Activity","id":"Log","name":"Log"},{"activity":{"input":{"Body":"=f1.airdataselector($flow.gateway, $flow.reading, $flow.enriched, $property[\"Inference_0_REST.InferenceData\"])","SkipCondition":"=boolean.false()","URL":"=string.tostring(f1.airfirsttrue($flow.reading, f1.json2object($property[\"Inference_0_REST.Conditions\"])))"},"ref":"#httpclient","schemas":{"input":{"Variables":{"fe_metadata":"{}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}"}},"settings":{"httpHeaders":{"fe_metadata":"[{\"Key\":\"Accept\",\"Value\":\"application/json\"},{\"Key\":\"Content-Type\",\"Value\":\"application/json-patch+json\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Key\":{\"type\":\"string\"},\"Value\":{\"type\":\"string\"}},\"required\":[\"Key\",\"Value\"]}}"}}},"settings":{"httpHeaders":"[{\"Key\":\"Accept\",\"Value\":\"application/json\"},{\"Key\":\"Content-Type\",\"Value\":\"application/json-patch+json\"}]","leftToken":"$","method":"POST","rightToken":"$","timeout":"=$property[\"Inference_0_REST.Timeout\"]","urlMapping":"=$property[\"Inference_0_REST.URLMapping\"]","variablesDef":""}},"description":"This activity build docker image from Dockerfile","id":"HTTPClient","name":"HTTPClient"},{"activity":{"input":{"Consumer":"=$property[\"Inference_0_@REST.Consumer\"]","InputDataCollection":"=$flow.enriched","Producer":"=$property[\"Inference_0_REST.Producer\"]","TargetData":{"mapping":{"Inferred":"=f1.ternary($activity[HTTPClient].Success, $activity[HTTPClient].Data, null)"}}},"ref":"#dataembedder","schemas":{"input":{"TargetData":{"fe_metadata":"{\"Inferred\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Inferred\":{\"type\":\"string\"}}}"}},"settings":{"Targets":{"fe_metadata":"[{\"Name\":\"Inferred\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}"}}},"settings":{"Targets":"[{\"Name\":\"Inferred\",\"Type\":\"String\"}]"}},"description":"This activity embed datas to array","id":"DataEmbedder","name":"DataEmbedder"},{"activity":{"input":{"enriched":"=$activity[DataEmbedder].OutputDataCollection","gateway":"=$flow.gateway","reading":"=$flow.reading"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Pipe_1"}},"description":"Simple SubFlow Activity","id":"Next_Flow","name":"Next_Flow"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return","name":"Return"}]},"id":"flow:Inference_0"},{"data":{"description":"6|13","links":[{"from":"Log","id":1,"to":"CheckServiceType","type":"default"},{"from":"CheckServiceType","id":2,"label":"CheckServiceTypeto","to":"LogPublish","type":"expression","value":"boolean.false()==$activity[CheckServiceType].Data.IsNotificationListener\u0026\u0026boolean.false()==$activity[CheckServiceType].Data.IsNotification"},{"from":"LogPublish","id":3,"to":"DataSelector","type":"default"},{"from":"DataSelector","id":4,"to":"TransformData","type":"default"},{"from":"TransformData","id":5,"to":"MQTTPub","type":"default"},{"from":"MQTTPub","id":6,"to":"Next_Flow_6","type":"default"},{"from":"Next_Flow_6","id":7,"to":"Return1","type":"default"},{"from":"CheckServiceType","id":8,"label":"CheckServiceTypetoLogMessage1","to":"LogNotification","type":"expression","value":"boolean.true()==$activity[CheckServiceType].Data.IsNotificationListener\u0026\u0026boolean.true()==$activity[CheckServiceType].Data.IsNotification"},{"from":"LogNotification","id":9,"label":"LogNotificationtoMQTTPub1","to":"MQTTNotify","type":"expression","value":"\"Message\"==$flow.enriched[0].value"},{"from":"MQTTNotify","id":10,"to":"Return2","type":"default"},{"from":"LogNotification","id":11,"label":"LogNotificationtoReturn","to":"Return3","type":"exprOtherwise"},{"from":"CheckServiceType","id":12,"label":"CheckServiceType to LogMessage1","to":"LogPassThrough","type":"exprOtherwise"},{"from":"LogPassThrough","id":13,"to":"Next_Flow_13","type":"default"},{"from":"Next_Flow_13","id":14,"to":"Return4","type":"default"}],"metadata":{"fe_metadata":{"input":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"},"input":[{"name":"gateway","type":"string"},{"name":"reading","schema":{"type":"json","value":"{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"},"type":"object"},{"name":"enriched","schema":{"type":"json","value":"{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"},"type":"array"}],"output":[]},"name":"Pipe_1","tasks":[{"activity":{"input":{"Log Level":"=$property[\"Pipe_1_Logging.LogLevel\"]","flowInfo":false,"message":"=string.concat(\"########## Pipe_1(MQTT_FS) ########## : gateway = \", $flow.gateway, \", reading = { ... }, enriched = \", string.tostring($flow.enriched))"},"ref":"#log"},"description":"Simple Log Message Activity","id":"Log","name":"Log"},{"activity":{"input":{"Mapping":{"mapping":{"IsNotification":"=(0\u003carray.count($flow.enriched)) \u0026\u0026 (\"Notification\"==$flow.enriched[0].name)","IsNotificationListener":"=$property[\"Pipe_1_App.IsListener\"]"}}},"ref":"#mapping","schemas":{"input":{"Mapping":{"fe_metadata":"{\"IsNotificationListener\":true,\"IsNotification\":true,\"SkipCondition\":false}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"IsNotificationListener\":{\"type\":\"boolean\"},\"IsNotification\":{\"type\":\"boolean\"},\"SkipCondition\":{\"type\":\"boolean\"}}}"}},"output":{"Data":{"fe_metadata":"{\"IsNotificationListener\":true,\"IsNotification\":true}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"IsNotificationListener\":{\"type\":\"boolean\"},\"IsNotification\":{\"type\":\"boolean\"}}}"}},"settings":{"MappingFields":{"fe_metadata":"[{\"Name\":\"IsNotificationListener\",\"Type\":\"Boolean\"},{\"Name\":\"IsNotification\",\"Type\":\"Boolean\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}"}}},"settings":{"IsArray":false,"MappingFields":"[{\"Name\":\"IsNotificationListener\",\"Type\":\"Boolean\"},{\"Name\":\"IsNotification\",\"Type\":\"Boolean\"}]"}},"description":"Mapping field from input to output","id":"CheckServiceType","name":"CheckServiceType"},{"activity":{"input":{"Log Level":"INFO","flowInfo":false,"message":"*** Publishing ***"},"ref":"#log"},"description":"Simple Log Message Activity","id":"LogPublish","name":"LogPublish"},{"activity":{"input":{"DataCollection":"=f1.airdata2collection(f1.modifyobject(f1.modifyobject(f1.json2object(\"{}\"), \"gateway\", $flow.gateway), \"reading\", $flow.reading), $flow.enriched)","Variables":{"mapping":{"Value":"=$property[\"Pipe_1_MQTTPub.TargetField\"]"}}},"ref":"#dataselector","schemas":{"input":{"Variables":{"fe_metadata":"{\"Value\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Value\":{\"type\":\"string\"}}}"}},"output":{"ExtractedData":{"fe_metadata":"{\"Value\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Value\":{\"type\":\"string\"}}}"}},"settings":{"targets":{"fe_metadata":"[{\"Name\":\"Value\",\"FieldMatch\":\"$Value$\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"FieldMatch\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}"},"variablesDef":{"fe_metadata":"[{\"Name\":\"Value\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}"}}},"settings":{"leftToken":"$","rightToken":"$","targets":"[{\"Name\":\"Value\",\"FieldMatch\":\"$Value$\",\"Type\":\"String\"}]","variablesDef":"[{\"Name\":\"Value\",\"Type\":\"String\"}]"}},"description":"This activity select datas from array","id":"DataSelector","name":"DataSelector"},{"activity":{"input":{"Mapping":{"mapping":{"ResourceID":"=f1.ternary(\"f1..value\"==$property[\"Pipe_1_MQTTPub.TargetField\"], $flow.reading.id, string.concat($flow.reading.id, \"_\", string.substring($property[\"Pipe_1_MQTTPub.TargetField\"],string.lastIndex($property[\"Pipe_1_MQTTPub.TargetField\"], \".\")+1,string.length($property[\"Pipe_1_MQTTPub.TargetField\"])-string.lastIndex($property[\"Pipe_1_MQTTPub.TargetField\"], \".\")-1)))","ResourceName":"=f1.ternary(\"f1..value\"==$property[\"Pipe_1_MQTTPub.TargetField\"], $flow.reading.name, string.concat($flow.reading.name, \"_\", string.substring($property[\"Pipe_1_MQTTPub.TargetField\"],string.lastIndex($property[\"Pipe_1_MQTTPub.TargetField\"], \".\")+1,string.length($property[\"Pipe_1_MQTTPub.TargetField\"])-string.lastIndex($property[\"Pipe_1_MQTTPub.TargetField\"], \".\")-1)))"}}},"ref":"#mapping","schemas":{"input":{"Mapping":{"fe_metadata":"{\"ResourceID\":\"2\",\"ResourceName\":\"2\",\"SkipCondition\":false}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ResourceID\":{\"type\":\"string\"},\"ResourceName\":{\"type\":\"string\"},\"SkipCondition\":{\"type\":\"boolean\"}}}"}},"output":{"Data":{"fe_metadata":"{\"ResourceID\":\"2\",\"ResourceName\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ResourceID\":{\"type\":\"string\"},\"ResourceName\":{\"type\":\"string\"}}}"}},"settings":{"MappingFields":{"fe_metadata":"[{\"Name\":\"ResourceID\",\"Type\":\"String\"},{\"Name\":\"ResourceName\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}"}}},"settings":{"IsArray":false,"MappingFields":"[{\"Name\":\"ResourceID\",\"Type\":\"String\"},{\"Name\":\"ResourceName\",\"Type\":\"String\"}]"}},"description":"Mapping field from input to output","id":"TransformData","name":"TransformData"},{"activity":{"input":{"Connection":{"actions":[{"name":"Save"}],"connectorDescription":" ","connectorName":"Pipe_1_IoTMQTT","description":"MQTT Connector","display":{"category":"Mqtt","description":"MQTT Connector","largeIcon":"icons/mqtt.png","smallIcon":"icons/mqtt.png","visible":true},"feature":{},"handler":{"settings":[]},"hashTags":[],"id":"Pipe_1_-d6a870e0-7252-11eb-9375-e70618e4c84b","inputMappings":{},"inputs":[],"isValid":true,"iteratorAccumulate":false,"iteratorMappings":{},"key":"Tibco/Mqtt/connector/connection/connector.json","keyfield":"name","lastUpdatedTime":1614026666641,"loopSettings":[],"loopType":"none","name":"connection","outputMappings":{},"outputs":[],"propertyMap":{},"ref":"git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection","reply":[],"retrySettings":[],"s3Prefix":"Tibco","schemaMap":{},"settings":[{"display":{"name":"Connection Name","visible":true},"name":"name","required":true,"type":"string","value":"Pipe_1_IoTMQTT"},{"display":{"name":"Description","visible":true},"name":"description","type":"string","value":""},{"display":{"Description":"Enter a broker URL in the form '\u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e'","appPropertySupport":true,"name":"Broker URL","visible":true},"name":"broker","required":true,"type":"string","value":"=$property[\"Mqtt.Pipe_1_IoTMQTT.Broker_URL\"]"},{"display":{"Description":"Enter a username if this connection requires one","appPropertySupport":true,"name":"Username","visible":true},"name":"user","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_1_IoTMQTT.Username\"]"},{"display":{"Description":"Enter a password if this connection requires one","appPropertySupport":true,"encryptable":true,"name":"Password","type":"password","visible":true},"name":"password","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_1_IoTMQTT.Password\"]"},{"allowed":["None","TLS-Cert","TLS-ClientAuth"],"display":{"description":"Choose the type of authentication to use","name":"Encryption Mode"},"name":"encryptionMode","type":"string","value":"None"},{"display":{"description":"Select the CA certificate file used to sign the broker's certificate","fileExtensions":[".crt",".cert",".pem"],"name":"Cacert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"cacert","required":false,"type":"string","value":""},{"display":{"description":"Select the client certificate file for connections requiring client auth","fileExtensions":[".crt",".cert",".pem"],"name":"Client Cert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientcert","required":false,"type":"string","value":""},{"display":{"description":"Select the client key file used for connections requiring client auth","fileExtensions":[".key",".pem"],"name":"Client Key","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientkey","required":false,"type":"string","value":""}],"title":"MQTT Connector","type":"flogo:connector","user":"flogo","version":"1.0.0"},"jsonValue":{"mapping":{"device":"=$flow.reading.device","gateway":"=$flow.gateway","id":"=$activity[TransformData].Data.ResourceID","readings":[{"device":"=$flow.reading.device","id":"=$activity[TransformData].Data.ResourceID","mediaType":"=$flow.reading.mediaType","name":"=$activity[TransformData].Data.ResourceName","origin":"=$flow.reading.origin","value":"=f1.ternary($property[\"Pipe_1_MQTTPub.EncodeReadingValue\"], string.stringToBase64($activity[DataSelector].ExtractedData.Value), $activity[DataSelector].ExtractedData.Value)","valueType":"=$flow.reading.valueType"}],"source":"=$flow.reading.origin"}},"qos":"=$property[\"Pipe_1_MQTTPub.Qos\"]","retain":"=$property[\"Pipe_1_MQTTPub.Retain\"]","stringValue":"","topic":"=$property[\"Pipe_1_MQTTPub.Topic\"]","valueType":"JSON"},"ref":"#publish","schemas":{"input":{"jsonValue":{"fe_metadata":"{ \"id\": \"@f1..id@\", \"source\": 1, \"device\": \"@f1..device@\", \"gateway\": \"@f1..gateway@\", \"readings\": [{\"id\": \"@f1..id@\", \"origin\": 1, \"device\": \"@f1..device@\", \"name\": \"@f1..name@\", \"value\": \"@f1..value@\", \"valueType\": \"@f1..valueType@\", \"mediaType\": \"@f1..mediaType@\"}]}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"source\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}}}}"}}}},"description":"An MQTT message publisher","id":"MQTTPub","name":"MQTTPub"},{"activity":{"input":{"enriched":"=$flow.enriched","gateway":"=$flow.gateway","reading":"=$flow.reading"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\@":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Pipe_2"}},"description":"Simple SubFlow Activity","id":"Next_Flow_6","name":"Next_Flow_6"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return1","name":"Return1"},{"activity":{"input":{"Log Level":"INFO","flowInfo":false,"message":"*** Notifying ***"},"ref":"#log"},"description":"Simple Log Message Activity","id":"LogNotification","name":"LogNotification"},{"activity":{"input":{"Connection":{"actions":[{"name":"Save"}],"connectorDescription":" ","connectorName":"IoTMQTT","description":"MQTT Connector","display":{"category":"Mqtt","description":"MQTT Connector","largeIcon":"icons/mqtt.png","smallIcon":"icons/mqtt.png","visible":true},"feature":{},"handler":{"settings":[]},"hashTags":[],"id":"d6a870e0-7252-11eb-9375-e70618e4c84b","inputMappings":{},"inputs":[],"isValid":true,"iteratorAccumulate":false,"iteratorMappings":{},"key":"Tibco/Mqtt/connector/connection/connector.json","keyfield":"name","lastUpdatedTime":1614026666641,"loopSettings":[],"loopType":"none","name":"connection","outputMappings":{},"outputs":[],"propertyMap":{},"ref":"git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection","reply":[],"retrySettings":[],"s3Prefix":"Tibco","schemaMap":{},"settings":[{"display":{"name":"Connection Name","visible":true},"name":"name","required":true,"type":"string","value":"Pipe_1_IoTMQTT"},{"display":{"name":"Description","visible":true},"name":"description","type":"string","value":""},{"display":{"Description":"Enter a broker URL in the form '\u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e'","appPropertySupport":true,"name":"Broker URL","visible":true},"name":"broker","required":true,"type":"string","value":"=$property[\"Mqtt.Pipe_1_IoTMQTT.Broker_URL\"]"},{"display":{"Description":"Enter a username if this connection requires one","appPropertySupport":true,"name":"Username","visible":true},"name":"user","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_1_IoTMQTT.Username\"]"},{"display":{"Description":"Enter a password if this connection requires one","appPropertySupport":true,"encryptable":true,"name":"Password","type":"password","visible":true},"name":"password","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_1_IoTMQTT.Password\"]"},{"allowed":["None","TLS-Cert","TLS-ClientAuth"],"display":{"description":"Choose the type of authentication to use","name":"Encryption Mode"},"name":"encryptionMode","type":"string","value":"None"},{"display":{"description":"Select the CA certificate file used to sign the broker's certificate","fileExtensions":[".crt",".cert",".pem"],"name":"Cacert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"cacert","required":false,"type":"string","value":""},{"display":{"description":"Select the client certificate file for connections requiring client auth","fileExtensions":[".crt",".cert",".pem"],"name":"Client Cert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientcert","required":false,"type":"string","value":""},{"display":{"description":"Select the client key file used for connections requiring client auth","fileExtensions":[".key",".pem"],"name":"Client Key","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientkey","required":false,"type":"string","value":""}],"title":"MQTT Connector","type":"flogo:connector","user":"flogo","version":"1.0.0"},"jsonValue":"=f1.json2object(f1.airdataselector($flow.gateway, $flow.reading, $flow.enriched, $property[\"Pipe_1_MQTTPub.NotificationData\"]))","qos":"=$property[\"Pipe_1_MQTTPub.Qos\"]","retain":"=$property[\"Pipe_1_MQTTPub.Retain\"]","stringValue":"","topic":"=$property[\"Pipe_1_MQTTPub.Topic\"]","valueType":"JSON"},"ref":"#publish","schemas":{"input":{"jsonValue":{"fe_metadata":"{}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}"}}}},"description":"An MQTT message publisher","id":"MQTTNotify","name":"MQTTNotify"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return2","name":"Return2"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return3","name":"Return3"},{"activity":{"input":{"Log Level":"INFO","flowInfo":false,"message":"*** Passing Through ***"},"ref":"#log"},"description":"Simple Log Message Activity","id":"LogPassThrough","name":"LogPassThrough"},{"activity":{"input":{"enriched":"=$flow.enriched","gateway":"=$flow.gateway","reading":"=$flow.reading"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Pipe_2"}},"description":"Simple SubFlow Activity","id":"Next_Flow_13","name":"Next_Flow_13"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return4","name":"Return4"}]},"id":"flow:Pipe_1"},{"data":{"description":"6|13","links":[{"from":"Log","id":1,"to":"CheckServiceType","type":"default"},{"from":"CheckServiceType","id":2,"label":"CheckServiceTypeto","to":"LogPublish","type":"expression","value":"boolean.false()==$activity[CheckServiceType].Data.IsNotificationListener\u0026\u0026boolean.false()==$activity[CheckServiceType].Data.IsNotification"},{"from":"LogPublish","id":3,"to":"DataSelector","type":"default"},{"from":"DataSelector","id":4,"to":"TransformData","type":"default"},{"from":"TransformData","id":5,"to":"MQTTPub","type":"default"},{"from":"MQTTPub","id":6,"to":"Next_Flow_6","type":"default"},{"from":"Next_Flow_6","id":7,"to":"Return1","type":"default"},{"from":"CheckServiceType","id":8,"label":"CheckServiceTypetoLogMessage1","to":"LogNotification","type":"expression","value":"boolean.true()==$activity[CheckServiceType].Data.IsNotificationListener\u0026\u0026boolean.true()==$activity[CheckServiceType].Data.IsNotification"},{"from":"LogNotification","id":9,"label":"LogNotificationtoMQTTPub1","to":"MQTTNotify","type":"expression","value":"\"Message\"==$flow.enriched[0].value"},{"from":"MQTTNotify","id":10,"to":"Return2","type":"default"},{"from":"LogNotification","id":11,"label":"LogNotificationtoReturn","to":"Return3","type":"exprOtherwise"},{"from":"CheckServiceType","id":12,"label":"CheckServiceType to LogMessage1","to":"LogPassThrough","type":"exprOtherwise"},{"from":"LogPassThrough","id":13,"to":"Next_Flow_13","type":"default"},{"from":"Next_Flow_13","id":14,"to":"Return4","type":"default"}],"metadata":{"fe_metadata":{"input":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"},"input":[{"name":"gateway","type":"string"},{"name":"reading","schema":{"type":"json","value":"{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"},"type":"object"},{"name":"enriched","schema":{"type":"json","value":"{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"},"type":"array"}],"output":[]},"name":"Pipe_2","tasks":[{"activity":{"input":{"Log Level":"=$property[\"Pipe_2_Logging.LogLevel\"]","flowInfo":false,"message":"=string.concat(\"########## Pipe_2(MQTT_FS) ########## : gateway = \", $flow.gateway, \", reading = { ... }, enriched = \", string.tostring($flow.enriched))"},"ref":"#log"},"description":"Simple Log Message Activity","id":"Log","name":"Log"},{"activity":{"input":{"Mapping":{"mapping":{"IsNotification":"=(0\u003carray.count($flow.enriched)) \u0026\u0026 (\"Notification\"==$flow.enriched[0].name)","IsNotificationListener":"=$property[\"Pipe_2_App.IsListener\"]"}}},"ref":"#mapping","schemas":{"input":{"Mapping":{"fe_metadata":"{\"IsNotificationListener\":true,\"IsNotification\":true,\"SkipCondition\":false}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"IsNotificationListener\":{\"type\":\"boolean\"},\"IsNotification\":{\"type\":\"boolean\"},\"SkipCondition\":{\"type\":\"boolean\"}}}"}},"output":{"Data":{"fe_metadata":"{\"IsNotificationListener\":true,\"IsNotification\":true}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"IsNotificationListener\":{\"type\":\"boolean\"},\"IsNotification\":{\"type\":\"boolean\"}}}"}},"settings":{"MappingFields":{"fe_metadata":"[{\"Name\":\"IsNotificationListener\",\"Type\":\"Boolean\"},{\"Name\":\"IsNotification\",\"Type\":\"Boolean\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}"}}},"settings":{"IsArray":false,"MappingFields":"[{\"Name\":\"IsNotificationListener\",\"Type\":\"Boolean\"},{\"Name\":\"IsNotification\",\"Type\":\"Boolean\"}]"}},"description":"Mapping field from input to output","id":"CheckServiceType","name":"CheckServiceType"},{"activity":{"input":{"Log Level":"INFO","flowInfo":false,"message":"*** Publishing ***"},"ref":"#log"},"description":"Simple Log Message Activity","id":"LogPublish","name":"LogPublish"},{"activity":{"input":{"DataCollection":"=f1.airdata2collection(f1.modifyobject(f1.modifyobject(f1.json2object(\"{}\"), \"gateway\", $flow.gateway), \"reading\", $flow.reading), $flow.enriched)","Variables":{"mapping":{"Value":"=$property[\"Pipe_2_MQTTPub.TargetField\"]"}}},"ref":"#dataselector","schemas":{"input":{"Variables":{"fe_metadata":"{\"Value\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Value\":{\"type\":\"string\"}}}"}},"output":{"ExtractedData":{"fe_metadata":"{\"Value\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Value\":{\"type\":\"string\"}}}"}},"settings":{"targets":{"fe_metadata":"[{\"Name\":\"Value\",\"FieldMatch\":\"$Value$\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"FieldMatch\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}"},"variablesDef":{"fe_metadata":"[{\"Name\":\"Value\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}"}}},"settings":{"leftToken":"$","rightToken":"$","targets":"[{\"Name\":\"Value\",\"FieldMatch\":\"$Value$\",\"Type\":\"String\"}]","variablesDef":"[{\"Name\":\"Value\",\"Type\":\"String\"}]"}},"description":"This activity select datas from array","id":"DataSelector","name":"DataSelector"},{"activity":{"input":{"Mapping":{"mapping":{"ResourceID":"=f1.ternary(\"f1..value\"==$property[\"Pipe_2_MQTTPub.TargetField\"], $flow.reading.id, string.concat($flow.reading.id, \"_\", string.substring($property[\"Pipe_2_MQTTPub.TargetField\"],string.lastIndex($property[\"Pipe_2_MQTTPub.TargetField\"], \".\")+1,string.length($property[\"Pipe_2_MQTTPub.TargetField\"])-string.lastIndex($property[\"Pipe_2_MQTTPub.TargetField\"], \".\")-1)))","ResourceName":"=f1.ternary(\"f1..value\"==$property[\"Pipe_2_MQTTPub.TargetField\"], $flow.reading.name, string.concat($flow.reading.name, \"_\", string.substring($property[\"Pipe_2_MQTTPub.TargetField\"],string.lastIndex($property[\"Pipe_2_MQTTPub.TargetField\"], \".\")+1,string.length($property[\"Pipe_2_MQTTPub.TargetField\"])-string.lastIndex($property[\"Pipe_2_MQTTPub.TargetField\"], \".\")-1)))"}}},"ref":"#mapping","schemas":{"input":{"Mapping":{"fe_metadata":"{\"ResourceID\":\"2\",\"ResourceName\":\"2\",\"SkipCondition\":false}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ResourceID\":{\"type\":\"string\"},\"ResourceName\":{\"type\":\"string\"},\"SkipCondition\":{\"type\":\"boolean\"}}}"}},"output":{"Data":{"fe_metadata":"{\"ResourceID\":\"2\",\"ResourceName\":\"2\"}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ResourceID\":{\"type\":\"string\"},\"ResourceName\":{\"type\":\"string\"}}}"}},"settings":{"MappingFields":{"fe_metadata":"[{\"Name\":\"ResourceID\",\"Type\":\"String\"},{\"Name\":\"ResourceName\",\"Type\":\"String\"}]","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}},\"required\":[\"Name\",\"Type\"]}}"}}},"settings":{"IsArray":false,"MappingFields":"[{\"Name\":\"ResourceID\",\"Type\":\"String\"},{\"Name\":\"ResourceName\",\"Type\":\"String\"}]"}},"description":"Mapping field from input to output","id":"TransformData","name":"TransformData"},{"activity":{"input":{"Connection":{"actions":[{"name":"Save"}],"connectorDescription":" ","connectorName":"Pipe_2_IoTMQTT","description":"MQTT Connector","display":{"category":"Mqtt","description":"MQTT Connector","largeIcon":"icons/mqtt.png","smallIcon":"icons/mqtt.png","visible":true},"feature":{},"handler":{"settings":[]},"hashTags":[],"id":"Pipe_2_-d6a870e0-7252-11eb-9375-e70618e4c84b","inputMappings":{},"inputs":[],"isValid":true,"iteratorAccumulate":false,"iteratorMappings":{},"key":"Tibco/Mqtt/connector/connection/connector.json","keyfield":"name","lastUpdatedTime":1614026666641,"loopSettings":[],"loopType":"none","name":"connection","outputMappings":{},"outputs":[],"propertyMap":{},"ref":"git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection","reply":[],"retrySettings":[],"s3Prefix":"Tibco","schemaMap":{},"settings":[{"display":{"name":"Connection Name","visible":true},"name":"name","required":true,"type":"string","value":"Pipe_2_IoTMQTT"},{"display":{"name":"Description","visible":true},"name":"description","type":"string","value":""},{"display":{"Description":"Enter a broker URL in the form '\u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e'","appPropertySupport":true,"name":"Broker URL","visible":true},"name":"broker","required":true,"type":"string","value":"=$property[\"Mqtt.Pipe_2_IoTMQTT.Broker_URL\"]"},{"display":{"Description":"Enter a username if this connection requires one","appPropertySupport":true,"name":"Username","visible":true},"name":"user","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_2_IoTMQTT.Username\"]"},{"display":{"Description":"Enter a password if this connection requires one","appPropertySupport":true,"encryptable":true,"name":"Password","type":"password","visible":true},"name":"password","required":false,"type":"string","value":"=$property[\"@Mqtt.Pipe_2_IoTMQTT.Password\"]"},{"allowed":["None","TLS-Cert","TLS-ClientAuth"],"display":{"description":"Choose the type of authentication to use","name":"Encryption Mode"},"name":"encryptionMode","type":"string","value":"None"},{"display":{"description":"Select the CA certificate file used to sign the broker's certificate","fileExtensions":[".crt",".cert",".pem"],"name":"Cacert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"cacert","required":false,"type":"string","value":""},{"display":{"description":"Select the client certificate file for connections requiring client auth","fileExtensions":[".crt",".cert",".pem"],"name":"Client Cert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientcert","required":false,"type":"string","value":""},{"display":{"description":"Select the client key file used for connections requiring client auth","fileExtensions":[".key",".pem"],"name":"Client Key","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientkey","required":false,"type":"string","value":""}],"title":"MQTT Connector","type":"flogo:connector","user":"flogo","version":"1.0.0"},"jsonValue":{"mapping":{"device":"=$flow.reading.device","gateway":"=$flow.gateway","id":"=$activity[TransformData].Data.ResourceID","readings":[{"device":"=$flow.reading.device","id":"=$activity[TransformData].Data.ResourceID","mediaType":"=$flow.reading.mediaType","name":"=$activity[TransformData].Data.ResourceName","origin":"=$flow.reading.origin","value":"=f1.ternary($property[\"Pipe_2_MQTTPub.EncodeReadingValue\"], string.stringToBase64($activity[DataSelector].ExtractedData.Value), $activity[DataSelector].ExtractedData.Value)","valueType":"=$flow.reading.valueType"}],"source":"=$flow.reading.origin"}},"qos":"=$property[\"Pipe_2_MQTTPub.Qos\"]","retain":"=$property[\"Pipe_2_MQTTPub.Retain\"]","stringValue":"","topic":"=$property[\"Pipe_2_MQTTPub.Topic\"]","valueType":"JSON"},"ref":"#publish","schemas":{"input":{"jsonValue":{"fe_metadata":"{ \"id\": \"@f1..id@\", \"source\": 1, \"device\": \"@f1..device@\", \"gateway\": \"@f1..gateway@\", \"readings\": [{\"id\": \"@f1..id@\", \"origin\": 1, \"device\": \"@f1..device@\", \"name\": \"@f1..name@\", \"value\": \"@f1..value@\", \"valueType\": \"@f1..valueType@\", \"mediaType\": \"@f1..mediaType@\"}]}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"source\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}}}}}"}}}},"description":"An MQTT message publisher","id":"MQTTPub","name":"MQTTPub"},{"activity":{"input":{"enriched":"=$flow.enriched","gateway":"=$flow.gateway","reading":"=$flow.reading"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Filter_3"}},"description":"Simple SubFlow Activity","id":"Next_Flow_6","name":"Next_Flow_6"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return1","name":"Return1"},{"activity":{"input":{"Log Level":"INFO","flowInfo":false,"message":"*** Notifying ***"},"ref":"#log"},"description":"Simple Log Message Activity","id":"LogNotification","name":"LogNotification"},{"activity":{"input":{"Connection":{"actions":[{"name":"Save"}],"connectorDescription":" ","connectorName":"IoTMQTT","description":"MQTT Connector","display":{"category":"Mqtt","description":"MQTT Connector","largeIcon":"icons/mqtt.png","smallIcon":"icons/mqtt.png","visible":true},"feature":{},"handler":{"settings":[]},"hashTags":[],"id":"d6a870e0-7252-11eb-9375-e70618e4c84b","inputMappings":{},"inputs":[],"isValid":true,"iteratorAccumulate":false,"iteratorMappings":{},"key":"Tibco/Mqtt/connector/connection/connector.json","keyfield":"name","lastUpdatedTime":1614026666641,"loopSettings":[],"loopType":"none","name":"connection","outputMappings":{},"outputs":[],"propertyMap":{},"ref":"git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection","reply":[],"retrySettings":[],"s3Prefix":"Tibco","schemaMap":{},"settings":[{"display":{"name":"Connection Name","visible":true},"name":"name","required":true,"type":"string","value":"Pipe_2_IoTMQTT"},{"display":{"name":"Description","visible":true},"name":"description","type":"string","value":""},{"display":{"Description":"Enter a broker URL in the form '\u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e'","appPropertySupport":true,"name":"Broker URL","visible":true},"name":"broker","required":true,"type":"string","value":"=$property[\"Mqtt.Pipe_2_IoTMQTT.Broker_URL\"]"},{"display":{"Description":"Enter a username if this connection requires one","appPropertySupport":true,"name":"Username","visible":true},"name":"user","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_2_IoTMQTT.Username\"]"},{"display":{"Description":"Enter a password if this connection requires one","appPropertySupport":true,"encryptable":true,"name":"Password","type":"password","visible":true},"name":"password","required":false,"type":"string","value":"=$property[\"Mqtt.Pipe_2_IoTMQTT.Password\"]"},{"allowed":["None","TLS-Cert","TLS-ClientAuth"],"display":{"description":"Choose the type of authentication to use","name":"Encryption Mode"},"name":"encryptionMode","type":"string","value":"None"},{"display":{"description":"Select the CA certificate file used to sign the broker's certificate","fileExtensions":[".crt",".cert",".pem"],"name":"Cacert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"cacert","required":false,"type":"string","value":""},{"display":{"description":"Select the client certificate file for connections requiring client auth","fileExtensions":[".crt",".cert",".pem"],"name":"Client Cert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientcert","required":false,"type":"string","value":""},{"display":{"description":"Select the client key file used for connections requiring client auth","fileExtensions":[".key",".pem"],"name":"Client Key","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientkey","required":false,"type":"string","value":""}],"title":"MQTT Connector","type":"flogo:connector","user":"flogo","version":"1.0.0"},"jsonValue":"=f1.json2object(f1.airdataselector($flow.gateway, $flow.reading, $flow.enriched, $property[\"Pipe_2_MQTTPub.NotificationData\"]))","qos":"=$property[\"Pipe_2_MQTTPub.Qos\"]","retain":"=$property[\"Pipe_2_MQTTPub.Retain\"]","stringValue":"","topic":"=$property[\"Pipe_2_MQTTPub.Topic\"]","valueType":"JSON"},"ref":"#publish","schemas":{"input":{"jsonValue":{"fe_metadata":"{}","type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}"}}}},"description":"An MQTT message publisher","id":"MQTTNotify","name":"MQTTNotify"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return2","name":"Return2"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return3","name":"Return3"},{"activity":{"input":{"Log Level":"INFO","flowInfo":false,"message":"*** Passing Through ***"},"ref":"#log"},"description":"Simple Log Message Activity","id":"LogPassThrough","name":"LogPassThrough"},{"activity":{"input":{"enriched":"=$flow.enriched","gateway":"=$flow.gateway","reading":"=$flow.reading"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Filter_3"}},"description":"Simple SubFlow Activity","id":"Next_Flow_13","name":"Next_Flow_13"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return4","name":"Return4"}]},"id":"flow:Pipe_2"},{"data":{"description":"","links":[{"from":"Log","id":1,"to":"Next_Flow","type":"default"},{"from":"Next_Flow","id":2,"to":"Return","type":"default"}],"metadata":{"input":[{"name":"gateway","type":"string"},{"name":"reading","schema":{"type":"json","value":"{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"},"type":"object"},{"name":"enriched","schema":{"type":"json","value":"{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"},"type":"array"}],"output":[]},"name":"Filter_3","tasks":[{"activity":{"input":{"addDetails":false,"message":"########## Aggregate ##########"},"ref":"#log"},"description":"Logs a message","id":"Log","name":"Log"},{"activity":{"input":{"enriched":"=$flow.enriched","gateway":"=$flow.gateway","reading":"=$flow.reading"},"ref":"#subflow","schemas":{"input":{"input":{"type":"json","value":"{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"}}},"settings":{"flowURI":"res://flow:Filter_4"}},"description":"Simple SubFlow Activity","id":"Next_Flow","name":"Next_Flow"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return","name":"Return"}]},"id":"flow:Filter_3"},{"data":{"description":"","links":[{"from":"Log","id":1,"to":"Return","type":"default"}],"metadata":{"input":[{"name":"gateway","type":"string"},{"name":"reading","schema":{"type":"json","value":"{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"},"type":"object"},{"name":"enriched","schema":{"type":"json","value":"{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"},"type":"array"}],"output":[]},"name":"Filter_4","tasks":[{"activity":{"input":{"addDetails":false,"message":"########## Aggregate ##########"},"ref":"#log"},"description":"Logs a message","id":"Log","name":"Log"},{"activity":{"ref":"#actreturn"},"description":"Simple Return Activity","id":"Return","name":"Return"}]},"id":"flow:Filter_4"}],"triggers":[{"description":"Subscribe to an MQTT topic","handlers":[{"action":{"input":{"data":"=$.jsonValue","duplicate":"=$.duplicate","messageID":"=$.messageID","qos":"=$.qos","retained":"=$.retained","topic":"=$.topic"},"ref":"github.com/project-flogo/flow","settings":{"flowURI":"res://flow:DataSource"}},"description":"","name":"DataSource","schemas":{"output":{"jsonValue":{"type":"json","value":"{\n            \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"gateway\": {\n                    \"type\": \"string\"\n                },\n                \"readings\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\"\n                            },\n                            \"origin\": {\n                                \"type\": \"number\"\n                            },\n                            \"device\": {\n                                \"type\": \"string\"\n                            },\n                            \"name\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"string\"\n                            },\n                            \"valueType\": {\n                                \"type\": \"string\"\n                            },\n                            \"mediaType\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                }\n            }\n        }"}}},"settings":{"qos":"=$property[\"DataSource_MQTTTrigger.MaximumQOS\"]","showwill":false,"topic":"=$property[\"DataSource_MQTTTrigger.Topic\"]","valueType":"JSON","will":"","willqos":0,"willretain":false,"willtopic":""}}],"id":"MQTTSubscriber","name":"mqtt-trigger","ref":"#subscribe","settings":{"mqttConnection":{"actions":[{"name":"Save"}],"connectorDescription":" ","connectorName":"DataSource_IoTMQTT","createdTime":1582218974582,"description":"MQTT Connector","display":{"category":"Mqtt","description":"MQTT Connector","largeIcon":"icons/mqtt.png","smallIcon":"icons/mqtt.png","visible":true},"feature":{},"handler":{"settings":[]},"hashTags":[],"id":"b2e07bc0-5404-11ea-8f02-2d62b9893e37","inputMappings":{},"inputs":[],"isValid":true,"iteratorAccumulate":false,"iteratorMappings":{},"key":"Tibco/Mqtt/connector/connection/connector.json","keyfield":"name","lastUpdatedTime":1582218974582,"loopSettings":[],"loopType":"none","name":"connection","outputMappings":{},"outputs":[],"propertyMap":{},"ref":"git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection","reply":[],"retrySettings":[],"s3Prefix":"Tibco","settings":[{"display":{"name":"Connection Name","visible":true},"name":"name","required":true,"type":"string","value":"DataSource_IoTMQTT"},{"display":{"name":"Description","visible":true},"name":"description","type":"string","value":""},{"display":{"Description":"Enter a broker URL in the form '\u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e'","appPropertySupport":true,"name":"Broker URL","visible":true},"name":"broker","required":true,"type":"string","value":"=$property[\"Mqtt.DataSource_IoTMQTT.Broker_URL\"]"},{"display":{"Description":"Enter a username if this connection requires one","appPropertySupport":true,"name":"Username","visible":true},"name":"user","required":false,"type":"string","value":"=$property[\"Mqtt.DataSource_IoTMQTT.Username\"]"},{"display":{"Description":"Enter a password if this connection requires one","appPropertySupport":true,"encryptable":true,"name":"Password","type":"password","visible":tr6ue},"name":"password","required":false,"type":"string","value":"=$property[\"Mqtt.DataSource_IoTMQTT.Password\"]"},{"allowed":["None","TLS-Cert","TLS-ClientAuth"],"display":{"description":"Choose the type of authentication to use","name":"Encryption Mode"},"name":"encryptionMode","type":"string","value":"None"},{"display":{"description":"Select the CA certificate file used to sign the broker's certificate","fileExtensions":[".crt",".cert",".pem"],"name":"Cacert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"cacert","required":false,"type":"string","value":""},{"display":{"description":"Select the client certificate file for connections requiring client auth","fileExtensions":[".crt",".cert",".pem"],"name":"Client Cert","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientcert","required":false,"type":"string","value":""},{"display":{"description":"Select the client key file used for connections requiring client auth","fileExtensions":[".key",".pem"],"name":"Client Key","readonly":false,"type":"fileselector","valid":true,"visible":false},"name":"clientkey","required":false,"type":"string","value":""}],"subscriptionId":"flogo_sbsc","title":"MQTT Connector","type":"flogo:connector","user":"flogo","version":"1.0.0"}}}],"type":"flogo:app","version":"1.0.0"},
2021-08-15T19:50:48.429Z INFO [flogo.activity.log] - ################### Component Type = Service,
2021-08-15T19:50:48.429Z INFO [flogo.activity.log] - ########## docker:has application descriptor ##########,
2021-08-15T19:50:48.429Z INFO [tibco-activity-filewriter] - (Eval) Graph to file entering ......... ,
2021-08-15T19:50:48.429Z INFO [tibco-activity-filewriter] - Processing handlers : variablesDef = [map[Name:Filename Type:String]],
2021-08-15T19:50:48.429Z INFO [tibco-activity-filewriter] - [KeywordMapper.replace] template = %Filename%,
2021-08-15T19:50:48.439Z INFO [tibco-activity-filewriter] - Initializing FileWriter Service end ...,
2021-08-15T19:50:48.439Z INFO [tibco-activity-filewriter] - (Eval) File name : /home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json,
2021-08-15T19:50:48.445Z INFO [tibco-activity-filewriter] - (Eval) list files in : /home/f1/projects/Air-account_00004/artifacts,,
d,
docker-compose.yml,
python,
wafermaps_pipeline.json,
2021-08-15T19:50:48.466Z INFO [tibco-activity-filewriter] - (Eval) write object to file exit ......... ,
&{0xc000364960 0xc000286a20 0xc000286a20},
2021-08-15T19:50:48.469Z INFO [tibco-f1-exec] - [ExecActivity.Eval] entering ........ ,
2021-08-15T19:50:48.469Z INFO [tibco-f1-exec] - [ExecActivity.getSysEnvs] sysEnvsDef = [],
2021-08-15T19:50:48.469Z INFO [tibco-f1-exec] - [ExecActivity.getSysEnvs] sysEnvs = map[],
2021-08-15T19:50:48.470Z INFO [tibco-f1-exec] - ExecActivity.Processing handlers : variablesDef = [map[Name:Filename Type:String] map[Name:FlogoBuilder Type:String] map[Name:AppBinFolder Type:String] map[Name:ServiceName Type:String] map[Name:ProjectID Type:String] map[Name:Runner Type:String] map[Name:ImageName Type:String] map[Name:BuildFolder Type:String] map[Name:ScriptName Type:String] map[Name:ExecutableName Type:String]],
2021-08-15T19:50:48.470Z INFO [tibco-f1-exec] - (ExecActivity.Eval) command : ./build-image-flogo-no-image.sh Air-account_00004 flogo $ImageName$ builder-linux_amd64 /home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json wafermaps_pipeline . flogo-engine,
2021-08-15T19:50:48.470Z INFO [tibco-f1-exec] - [ExecActivity.Eval] newEnv : [PATH=/usr/wi/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin HOSTNAME=3c69177f0128 System_BaseFolder=/home/f1 System_ServiceLocatorIP=servicelocator System_FlogoBuilder=builder-linux_amd64 EULA_ACCEPT=YES FLOGO_APP_PROPS_ENV=auto FLOGO_HOME=/usr/flogo/home FLOGO_LIB_DIR=/usr/flogo/lib SERVICES_DIR=/usr/flogo/services DockerUser=bigoyang DockerPassword=43Veryang GOLANG_VERSION=1.14.4 GOLANG_SHA256=7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584 GOPATH=/usr/wi/go DOCKER_VERSION=19.03.14 DOCKER_TLS_CERTDIR=/certs FLOGO_LOG_DTFORMAT=15:04:05.000 STOP_ENGINE_ON_ERROR=flase FLOGO_HTTP_SERVICE_PORT=7777 HOME=/root FLOGO_LOGGER_IMPL=zap FLOGO_SCHEMA_SUPPORT=true DetachedModex=y Platformx=linux/amd64 RSVPUrl=http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline],
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - (ExecActivity.Eval) iAsynchronous : true,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - Look up ececution event broker start ...,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - Look up SSE data broker end ...,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - (ExecActivity.Eval) execCommand asynchronously!,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.Eval] Exit ........ ,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] entering - execContext : map[ErrorMsg: Successful:true SystemEnvironment:map[DetachedModex:y Platformx:linux/amd64 RSVPUrl:http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline] Variable:map[AppBinFolder:. BuildFolder:/home/scripts ExecutableName:flogo-engine Filename:/home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json FlogoBuilder:builder-linux_amd64 ImageName: ProjectID:Air-account_00004 Runner:flogo ScriptName:build-image-flogo-no-image.sh ServiceName:wafermaps_pipeline]],
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] command : [[./build-image-flogo-no-image.sh Air-account_00004 flogo $ImageName$ builder-linux_amd64 /home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json wafermaps_pipeline . flogo-engine]],
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] Working folder : /home/scripts,
2021-08-15T19:50:48.471Z INFO [Generate F1 Descriptor/LogGenerateF1Descriptor] - %%%%%% Gnerate F1 Descriptor %%%%%% ID : Air-account_00004, DescriptorFilename : /home/f1/projects/Air-account_00004/pipeline/wafermaps_pipeline.json, DeployDescriptor : {"Descriptor":"docker-compose.yml","Name":"wafermaps_pipeline","Properties":[{"Group":"main","Value":[{"Name":"version","Type":"","Value":"3.6"},{"Name":"services.wafermaps_pipeline.container_name","Type":"","Value":"Air-account_00004_wafermaps_pipeline"},{"Name":"services.wafermaps_pipeline.build","Type":"","Value":"001"},{"Name":"networks.default.name","Type":"","Value":"http_rest_mqtt"},{"Name":"services.wafermaps_pipeline.environment[0]","Type":null,"Value":"FLOGO_APP_PROPS_ENV=auto"},{"Name":"services.wafermaps_pipeline.environment[1]","Type":null,"Value":"DataSource_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[2]","Type":null,"Value":"DataSource_MQTTTrigger_Topic=EdgexGatewayData"},{"Name":"services.wafermaps_pipeline.environment[3]","Type":null,"Value":"DataSource_MQTTTrigger_MaximumQOS=2"},{"Name":"services.wafermaps_pipeline.environment[4]","Type":null,"Value":"Mqtt_DataSource_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883"},{"Name":"services.wafermaps_pipeline.environment[5]","Type":null,"Value":"Mqtt_DataSource_IoTMQTT_Username=mqtt_admin"},{"Name":"services.wafermaps_pipeline.environment[6]","Type":null,"Value":"Mqtt_DataSource_IoTMQTT_Password=SECRET:SzHvHYjKw3yPY0qYP766RSyvczQlGbTRXB0="},{"Name":"services.wafermaps_pipeline.environment[7]","Type":null,"Value":"Inference_0_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[8]","Type":null,"Value":"Inference_0_REST_Timeout=600000"},{"Name":"services.wafermaps_pipeline.environment[9]","Type":null,"Value":"Inference_0_REST_InferenceData={\"Data\":\"@f1..value@\"}"},{"Name":"services.wafermaps_pipeline.environment[10]","Type":null,"Value":"Inference_0_REST_Conditions=[{\"device\":\"WaferSensing\",\"name\":\"wafer_snapshot\"}]"},{"Name":"services.wafermaps_pipeline.environment[11]","Type":null,"Value":"Inference_0_REST_URLMapping=[{\"Alias\":\"0\",\"URL\":\"http://192.168.1.152:10100/f1/data\"}]"},{"Name":"services.wafermaps_pipeline.environment[12]","Type":null,"Value":"Pipe_1_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[13]","Type":null,"Value":"Mqtt_Pipe_1_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883"},{"Name":"services.wafermaps_pipeline.environment[14]","Type":null,"Value":"Mqtt_Pipe_1_IoTMQTT_Username=mqtt_admin"},{"Name":"services.wafermaps_pipeline.environment[15]","Type":null,"Value":"Mqtt_Pipe_1_IoTMQTT_Password=SECRET:79V5PfQgmw5mTglH3kNiNcoeLPJGsx1w7Tw="},{"Name":"services.wafermaps_pipeline.environment[16]","Type":null,"Value":"Pipe_1_MQTTPub_Topic=AIRModelScoredData01"},{"Name":"services.wafermaps_pipeline.environment[17]","Type":null,"Value":"Pipe_1_MQTTPub_EncodeReadingValue=true"},{"Name":"services.wafermaps_pipeline.environment[18]","Type":null,"Value":"Pipe_1_MQTTPub_TargetField=Inference.REST..Inferred"},{"Name":"services.wafermaps_pipeline.environment[19]","Type":null,"Value":"Pipe_2_Logging_LogLevel=INFO"},{"Name":"services.wafermaps_pipeline.environment[20]","Type":null,"Value":"Mqtt_Pipe_2_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883"},{"Name":"services.wafermaps_pipeline.environment[21]","Type":null,"Value":"Mqtt_Pipe_2_IoTMQTT_Username=mqtt_admin"},{"Name":"services.wafermaps_pipeline.environment[22]","Type":null,"Value":"Mqtt_Pipe_2_IoTMQTT_Password=SECRET:79V5PfQgmw5mTglH3kNiNcoeLPJGsx1w7Tw="},{"Name":"services.wafermaps_pipeline.environment[23]","Type":null,"Value":"Pipe_2_MQTTPub_Topic=AIRData"},{"Name":"services.wafermaps_pipeline.environment[24]","Type":null,"Value":"Logging_LogLevel=INFO"}]}],"ScriptSystemEnv":{"DetachedModex":"y","Platformx":"linux/amd64","RSVPUrl":"http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline"},"Type":"docker","Variables":null},
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] PATH=/usr/wi/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] HOSTNAME=3c69177f0128,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] System_BaseFolder=/home/f1,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] System_ServiceLocatorIP=servicelocator,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] System_FlogoBuilder=builder-linux_amd64,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] EULA_ACCEPT=YES,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_APP_PROPS_ENV=auto,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_HOME=/usr/flogo/home,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_LIB_DIR=/usr/flogo/lib,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] SERVICES_DIR=/usr/flogo/services,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] DockerUser=bigoyang,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] DockerPassword=43Veryang,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] GOLANG_VERSION=1.14.4,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] GOLANG_SHA256=7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] GOPATH=/usr/wi/go,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] DOCKER_VERSION=19.03.14,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] DOCKER_TLS_CERTDIR=/certs,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_LOG_DTFORMAT=15:04:05.000,
2021-08-15T19:50:48.471Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] STOP_ENGINE_ON_ERROR=flase,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_HTTP_SERVICE_PORT=7777,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] HOME=/root,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_LOGGER_IMPL=zap,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] FLOGO_SCHEMA_SUPPORT=true,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] DetachedModex=y,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] Platformx=linux/amd64,
2021-08-15T19:50:48.472Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] RSVPUrl=http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline,
2021-08-15T19:50:48.472Z INFO [tibco-activity-filewriter] - (Eval) Graph to file entering ......... ,
2021-08-15T19:50:48.472Z INFO [tibco-activity-filewriter] - Processing handlers : variablesDef = [map[Name:Filename Type:String]],
2021-08-15T19:50:48.472Z INFO [tibco-activity-filewriter] - [KeywordMapper.replace] template = $Filename$,
�>>>>>>>>>1 map[DeploymentGpID:Air-account_00004 Services:[map[Descriptor:docker-compose.yml Name:wafermaps_pipeline Properties:[map[Group:main Value:[map[Name:version Type: Value:3.6] map[Name:services.wafermaps_pipeline.container_name Type: Value:Air-account_00004_wafermaps_pipeline] map[Name:services.wafermaps_pipeline.build Type: Value:001] map[Name:networks.default.name Type: Value:http_rest_mqtt] map[Name:services.wafermaps_pipeline.environment[0] Type:<nil> Value:FLOGO_APP_PROPS_ENV=auto] map[Name:services.wafermaps_pipeline.environment[1] Type:<nil> Value:DataSource_Logging_LogLevel=INFO] map[Name:services.wafermaps_pipeline.environment[2] Type:<nil> Value:DataSource_MQTTTrigger_Topic=EdgexGatewayData] map[Name:services.wafermaps_pipeline.environment[3] Type:<nil> Value:DataSource_MQTTTrigger_MaximumQOS=2] map[Name:services.wafermaps_pipeline.environment[4] Type:<nil> Value:Mqtt_DataSource_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883] map[Name:services.wafermaps_pipeline.environment[5] Type:<nil> Value:Mqtt_DataSource_IoTMQTT_Username=mqtt_admin] map[Name:services.wafermaps_pipeline.environment[6] Type:<nil> Value:Mqtt_DataSource_IoTMQTT_Password=SECRET:SzHvHYjKw3yPY0qYP766RSyvczQlGbTRXB0=] map[Name:services.wafermaps_pipeline.environment[7] Type:<nil> Value:Inference_0_Logging_LogLevel=INFO] map[Name:services.wafermaps_pipeline.environment[8] Type:<nil> Value:Inference_0_REST_Timeout=600000] map[Name:services.wafermaps_pipeline.environment[9] Type:<nil> Value:Inference_0_REST_InferenceData={"Data":"@f1..value@"}] map[Name:services.wafermaps_pipeline.environment[10] Type:<nil> Value:Inference_0_REST_Conditions=[{"device":"WaferSensing","name":"wafer_snapshot"}]] map[Name:services.wafermaps_pipeline.environment[11] Type:<nil> Value:Inference_0_REST_URLMapping=[{"Alias":"0","URL":"http://192.168.1.152:10100/f1/data"}]] map[Name:services.wafermaps_pipeline.environment[12] Type:<nil> Value:Pipe_1_Logging_LogLevel=INFO] map[Name:services.wafermaps_pipeline.environment[13] Type:<nil> Value:Mqtt_Pipe_1_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883] map[Name:services.wafermaps_pipeline.environment[14] Type:<nil> Value:Mqtt_Pipe_1_IoTMQTT_Username=mqtt_admin] map[Name:services.wafermaps_pipeline.environment[15] Type:<nil> Value:Mqtt_Pipe_1_IoTMQTT_Password=SECRET:79V5PfQgmw5mTglH3kNiNcoeLPJGsx1w7Tw=] map[Name:services.wafermaps_pipeline.environment[16] Type:<nil> Value:Pipe_1_MQTTPub_Topic=AIRModelScoredData01] map[Name:services.wafermaps_pipeline.environment[17] Type:<nil> Value:Pipe_1_MQTTPub_EncodeReadingValue=true] map[Name:services.wafermaps_pipeline.environment[18] Type:<nil> Value:Pipe_1_MQTTPub_TargetField=Inference.REST..Inferred] map[Name:services.wafermaps_pipeline.environment[19] Type:<nil> Value:Pipe_2_Logging_LogLevel=INFO] map[Name:services.wafermaps_pipeline.environment[20] Type:<nil> Value:Mqtt_Pipe_2_IoTMQTT_Broker_URL=tcp://71.167.29.247:1883] map[Name:services.wafermaps_pipeline.environment[21] Type:<nil> Value:Mqtt_Pipe_2_IoTMQTT_Username=mqtt_admin] map[Name:services.wafermaps_pipeline.environment[22] Type:<nil> Value:Mqtt_Pipe_2_IoTMQTT_Password=SECRET:79V5PfQgmw5mTglH3kNiNcoeLPJGsx1w7Tw=] map[Name:services.wafermaps_pipeline.environment[23] Type:<nil> Value:Pipe_2_MQTTPub_Topic=AIRData] map[Name:services.wafermaps_pipeline.environment[24] Type:<nil> Value:Logging_LogLevel=INFO]]]] ScriptSystemEnv:map[DetachedModex:y Platformx:linux/amd64 RSVPUrl:http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline] Type:docker Variables:<nil>]]],
2021-08-15T19:50:48.480Z INFO [tibco-activity-filewriter] - Initializing FileWriter Service end ...,
2021-08-15T19:50:48.480Z INFO [tibco-activity-filewriter] - (Eval) File name : /home/f1/projects/Air-account_00004/pipeline/wafermaps_pipeline.json,
2021-08-15T19:50:48.485Z INFO [tibco-activity-filewriter] - (Eval) list files in : /home/f1/projects/Air-account_00004/pipeline,
ProjectID = Air-account_00004,
2021-08-15T19:50:48.492Z INFO [tibco-activity-filewriter] - (Eval) write object to file exit ......... ,
2021-08-15T19:50:48.492Z INFO [flogo.flow] - Instance [bb8f1e37e689e29967f70b8c3e8e53be] Done,,
d,
wafermaps_pipeline.json,
wafermaps_pipeline_property_name_def.json,
Runner = flogo,
ImageName = $ImageName$,
FlogoBuilder = builder-linux_amd64,
Filename = /home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json,
ServiceName = wafermaps_pipeline,
AppBinFolder = .,
ExecutableName = flogo-engine,
/home/scripts,
./build-image-flogo-no-image.sh: line 29: [: ==: unary operator expected,
Build Executable for local platform !!,
Unhandled Error building flogo engine runtime error: invalid memory address or nil pointer dereference,
build engine failed, due to Unhandled Error building flogo engine runtime error: invalid memory address or nil pointer dereference,

 0 / 10    0.00%Unhandled Error building flogo engine runtime error: invalid memory address or nil pointer dereference,
2021-08-15T19:50:50.309Z INFO [tibco-f1-exec] - [ExecActivity.execCommand] send event - execContext : map[ErrorMsg: Successful:true SystemEnvironment:map[DetachedModex:y Platformx:linux/amd64 RSVPUrl:http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline] Variable:map[AppBinFolder:. BuildFolder:/home/scripts ExecutableName:flogo-engine Filename:/home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json FlogoBuilder:builder-linux_amd64 ImageName: ProjectID:Air-account_00004 Runner:flogo ScriptName:build-image-flogo-no-image.sh ServiceName:wafermaps_pipeline]],
2021-08-15T19:50:50.311Z INFO [Build Event/LogMessage] - ######## BUILD EVENT ######### {"ErrorMsg":"","Successful":true,"SystemEnvironment":{"DetachedModex":"y","Platformx":"linux/amd64","RSVPUrl":"http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline"},"Variable":{"AppBinFolder":".","BuildFolder":"/home/scripts","ExecutableName":"flogo-engine","Filename":"/home/f1/projects/Air-account_00004/artifacts/wafermaps_pipeline.json","FlogoBuilder":"builder-linux_amd64","ImageName":"","ProjectID":"Air-account_00004","Runner":"flogo","ScriptName":"build-image-flogo-no-image.sh","ServiceName":"wafermaps_pipeline"}},
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] entering ........ ,
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getURLMapper] Processing handlers : urlsMapping = <nil>,
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getURLMapper] mapper = map[],
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] url : http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline,
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Query method : POST,
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getheader] headersDef = [],
2021-08-15T19:50:50.311Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getheader] header = map[],
2021-08-15T19:50:50.312Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] request url = http://air:10099/f1/air/rsvp/Air-account_00004/wafermaps_pipeline,
>>>>>>>>>1 map[ErrorMsg: Successful:true],
&{0xc000365470 0xc000286cc0 0xc000286cc0},
map[],
2021-08-15T19:50:50.621Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Status:200 OK,
2021-08-15T19:50:50.621Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Headers:map[Access-Control-Allow-Origin:[*] Content-Length:[63] Content-Type:[application/json; charset=UTF-8] Date:[Sun, 15 Aug 2021 19:50:50 GMT] X-Server-Instance-Id:[a59ca839677439af88faaf8a35b22a6d]],
2021-08-15T19:50:50.622Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response body = {"ErrorCode":100,"Message":"Action triggered!","Success":true},
,
2021-08-15T19:50:50.622Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Exit ........ ,
2021-08-15T19:50:50.622Z INFO [flogo.flow] - Instance [bc8f1e37e689e29967f70b8c3e8e53be] Done,
map[],
2021-08-15T19:50:58.928Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] entering ........ ,
2021-08-15T19:50:58.929Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:getURLMapper] mapper = map[],
2021-08-15T19:50:58.929Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] url : http://servicelocator:10080/f1/locator/register/builder,
2021-08-15T19:50:58.929Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Query method : POST,
2021-08-15T19:50:58.929Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] request url = http://servicelocator:10080/f1/locator/register/builder,
2021-08-15T19:50:58.932Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Status:200 OK,
2021-08-15T19:50:58.933Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response Headers:map[Access-Control-Allow-Origin:[*] Content-Length:[127] Content-Type:[application/json; charset=UTF-8] Date:[Sun, 15 Aug 2021 19:50:58 GMT] X-Server-Instance-Id:[7252f1f4dc40dd77f3b475da1216cffb]],
2021-08-15T19:50:58.933Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:post] response body = {"Response":{"ID":"builder_servicelocator","Properties":null,"Type":"builder","URL":"http://servicelocator:10083/f1/builder"}},
,
2021-08-15T19:50:58.933Z INFO [tibco-model-ops-httpclient] - [HTTPClientActivity:Eval] Exit ........ ,
2021-08-15T19:50:58.933Z INFO [flogo.flow] - Instance [bd8f1e37e689e29967f70b8c3e8e53be] Done,



pwd

if [ -d "/home/f1/projects/$ProjectID/build" ] 
then
    rm -rf /home/f1/projects/$ProjectID/build 
fi
mkdir /home/f1/projects/$ProjectID/build

mkdir -p /home/f1/projects/$ProjectID/build/$ServiceName/server/data
if [ $Platform == "linux/arm64" ]
then
        cp -R /home/runner/flogo/ubuntu/docker/* /home/f1/projects/$ProjectID/build/$ServiceName
else
        cp -R /home/runner/flogo/alpine/docker/* /home/f1/projects/$ProjectID/build/$ServiceName
fi

if [ -d "/home/f1/projects/$ProjectID/artifacts" ] 
then
        cp -R /home/f1/projects/$ProjectID/artifacts /home/f1/projects/$ProjectID/build/$ServiceName/server
fi

if [ -d "/home/f1/projects/$ProjectID/metadata" ] 
then
        cp -R /home/f1/projects/$ProjectID/metadata/* /home/f1/projects/$ProjectID/build/$ServiceName/server/data
fi

cd /home/f1/projects/$ProjectID/build/$ServiceName

if [[ $Platform ]]
then
        echo "Build Executable for $Platform !!"
        /usr/flogo/home/bin/$FlogoBuilder build -p $Platform -f $Filename -n $ExecutableName -o $AppBinFolder
else
        echo "Build Executable for local platform !!"
        /usr/flogo/home/bin/$FlogoBuilder build -f $Filename -n $ExecutableName -o $AppBinFolder
fi
